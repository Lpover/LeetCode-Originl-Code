/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    deque<pair<TreeNode*,int>>q;
    int minDepth(TreeNode* root) {
        int n=0,lev;
        if(root!=nullptr)q.push_back({root,1});
        else return n;
        while(!q.empty()){
            TreeNode* p=q.front().first;
            lev=q.front().second;
            q.pop_front();
            if(p==nullptr)continue;
            if(p->left==nullptr&&p->right==nullptr)return lev;
            q.push_back({p->left,lev+1});
            q.push_back({p->right,lev+1});
        }
        return lev;
    }
};
