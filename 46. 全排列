class Solution {
public:
    vector<vector<int>> ans;
    vector<int> ind;

    void dfs(vector<int>nums,vector<int>ind,int maxn,vector<int>used){
        if(ind.size()==nums.size()){
            ans.push_back(ind);
            return;
        }
        for(int i=0;i<nums.size();i++){
            if(used[i]==0){
                int nownum=nums[i];
                ind.push_back(nownum);
                used[i]=1;
                dfs(nums,ind,maxn,used);
                ind.pop_back();
                used[i]=0;
            }
        }
    }

    vector<vector<int>> permute(vector<int>& nums) {
        int maxn=nums.size()-1;
        vector<int> used(maxn+1,0);
        dfs(nums,ind,maxn,used);
        return ans;
    }
};
