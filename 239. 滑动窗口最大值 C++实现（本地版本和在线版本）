本地DEV调试

#include<bits/stdc++.h>
using namespace std;
int main(){
	vector<int> nums={1,3,-1,-3,5,3,6,7};
	int k=3;
	deque<int> q;
    vector<int> ans;
 
    for(int i=0;i<nums.size();i++){
        int num=nums[i];
        while(q.empty()==false&&num>nums[q.back()]){
            q.pop_back();
        }
        q.push_back(i);
        if(i>=k-1){
            while(q.empty()==false&&q.front()<i-k+1){
                q.pop_front();
            }
            ans.push_back(nums[q.front()]);
        }
    } 
    for(auto i=0;i<ans.size();i++){
    	cout<<ans[i];
	}
} 
在线版本

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<int> q;
        vector<int> ans;
 
        for(int i=0;i<nums.size();i++){
            int num=nums[i];
            while(q.empty()==false&&num>nums[q.back()]){
                q.pop_back();
            }
            q.push_back(i);
            if(i>=k-1){
                while(q.empty()==false&&q.front()<i-k+1){
                    q.pop_front();
                }
                ans.push_back(nums[q.front()]);
            }
        } 
        return ans;
    }
